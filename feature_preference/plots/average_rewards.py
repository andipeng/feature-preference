import numpy as np

def average_two_lists(list1, list2):
    if len(list1) != len(list2):
        raise ValueError("Both lists must have the same size")
    avg_list = [(item1 + item2) / 2 for item1, item2 in zip(list1, list2)]
    return avg_list

comparisons = ['train_1', 'train_3', 'train_5', 'train_10', 'train_15', 'train_20', 'train_30', 'train_50', 'train_100']
rlhf_probs = [0.5859263841016792, 0.6872139419946407, 0.6706124380874781, 0.8613923600426426, 0.8761740970758743, 0.9919838456459987, 0.9959718651241726, 0.9971707455905867, 0.9966529651924416]
rlhf_probs_err = [0.03463040367810225, 0.16271846905599233, 0.13551711527730784, 0.03355345461001982, 0.04745039296883901, 0.005986985285471732, 0.0028533288202762567, 0.0013717965968148645, 0.0019686375682888674]
rlhf_correct = [0.6, 0.5733333333333334, 0.6133333333333333, 0.6866666666666666, 0.6466666666666666, 0.7933333333333333, 0.7333333333333334, 0.88, 0.8999999999999999]
rlhf_cor_err = [0.02309401076758502, 0.05925462944877059, 0.08743251365736002, 0.006666666666666637, 0.013333333333333346, 0.04371625682868001, 0.006666666666666672, 0.02000000000000002, 0.01999999999999998]
featureprefs_probs = [0.6284781227716141, 0.9064566115216341, 0.789117973208092, 0.9981833769951338, 0.9999865889549255, 1.0, 1.0, 1.0, 1.0]
featureprefs_probs_err = [0.1352010288173106, 0.08148522972056622, 0.176194265528649, 0.0018143673262648048, 5.516565214438501e-06, 0.0, 0.0, 0.0, 0.0]
featureprefs_correct = [0.56, 0.56, 0.6066666666666666, 0.8399999999999999, 0.84, 0.8533333333333334, 0.8533333333333334, 0.8666666666666667, 0.8933333333333334]
featureprefs_cor_err = [0.04618802153517007, 0.02309401076758502, 0.11095544651395492, 0.06429100507328636, 0.011547005383792526, 0.013333333333333346, 0.013333333333333346, 0.017638342073763955, 0.017638342073763955]
featureprefshuman_probs = [0.712532149604809, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
featureprefshuman_probs_err = [0.1578312347706843, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
featureprefshuman_correct = [0.64, 0.7066666666666667, 0.7266666666666666, 0.8333333333333334, 0.84, 0.8866666666666667, 0.8866666666666667, 0.8733333333333334, 0.8933333333333334]
featureprefshuman_cor_err = [0.034641016151377546, 0.03711842908553348, 0.03333333333333333, 0.03527668414752788, 0.030550504633038926, 0.006666666666666672, 0.006666666666666672, 0.029059326290271182, 0.006666666666666672]
rlhfhuman_probs = [0.6130465466966047, 0.8027440314353615, 0.8098744704951475, 0.9995464653144648, 0.9999955311233615, 1.0, 1.0, 1.0, 1.0]
rlhfhuman_probs_err = [0.1732372680838711, 0.16678020615242833, 0.1841096726913713, 0.000266195915590794, 3.831117067166219e-06, 0.0, 0.0, 0.0, 0.0]
rlhfhuman_correct = [0.6133333333333333, 0.6533333333333333, 0.6933333333333334, 0.7866666666666667, 0.84, 0.8733333333333334, 0.8533333333333334, 0.88, 0.9199999999999999]
rlhfhuman_cor_err = [0.017638342073763955, 0.006666666666666672, 0.048074017006186534, 0.02403700850309326, 0.01999999999999998, 0.029059326290271182, 0.024037008503093284, 0.023094010767585053, 0.011547005383792493]

comparisons = ['train_1', 'train_3', 'train_5', 'train_10', 'train_15', 'train_20', 'train_30', 'train_50', 'train_100']
rlhf_probs1 = [0.5426323437764321, 0.7348183279420123, 0.6542155441862566, 0.8735612158054188, 0.9277179590713831, 0.9843289498929625, 0.9729243704566249, 0.9942894607414434, 0.9976935371940518]
rlhf_probs_err1 = [0.061375530079457986, 0.11529028333208531, 0.0844925916782075, 0.019661723238184426, 0.026357630977298933, 0.008117464057938402, 0.0141077737373834, 0.0028071867483236953, 0.00042072614604084723]
rlhf_correct1 = [0.5, 0.6466666666666667, 0.5800000000000001, 0.7000000000000001, 0.7799999999999999, 0.7933333333333333, 0.82, 0.82, 0.9133333333333334]
rlhf_cor_err1 = [0.04163331998932268, 0.04371625682867999, 0.04618802153517007, 0.030550504633038926, 0.030550504633038936, 0.04371625682868001, 0.01999999999999998, 0.011547005383792493, 0.024037008503093246]
featureprefs_probs1 = [0.6082292406095399, 0.7241468329218298, 0.8276698258251138, 0.9999788852385533, 0.9998612455379816, 0.9999999941131215, 1.0, 1.0, 1.0]
featureprefs_probs_err1 = [0.045183669026784015, 0.16659764657393708, 0.1580849924281059, 1.1655501057430358e-05, 0.00013399156474716301, 5.886878503188105e-09, 0.0, 0.0, 0.0]
featureprefs_correct1 = [0.5533333333333333, 0.7533333333333333, 0.6866666666666666, 0.8666666666666666, 0.8666666666666667, 0.8733333333333334, 0.8333333333333334, 0.8466666666666667, 0.9266666666666666]
featureprefs_cor_err1 = [0.046666666666666676, 0.09333333333333337, 0.024037008503093246, 0.054569018479149654, 0.013333333333333346, 0.013333333333333346, 0.006666666666666672, 0.017638342073763955, 0.006666666666666637]
featureprefshuman_probs1 = [0.5664561839751255, 0.6957957427258844, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
featureprefshuman_probs_err1 = [0.14550638068338492, 0.3042040652147249, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
featureprefshuman_correct1 = [0.48666666666666664, 0.7533333333333333, 0.82, 0.7799999999999999, 0.82, 0.7866666666666666, 0.8333333333333334, 0.8466666666666667, 0.8466666666666667]
featureprefshuman_cor_err1 = [0.03711842908553349, 0.056960024968783544, 0.011547005383792493, 0.04163331998932267, 0.0, 0.01763834207376392, 0.02403700850309326, 0.006666666666666672, 0.006666666666666672]
rlhfhuman_probs1 = [0.6624089033331401, 0.8725395176881626, 0.7551949311645677, 0.999979849214907, 0.999994628223372, 0.9999999985282804, 1.0, 1.0, 1.0]
rlhfhuman_probs_err1 = [0.08787044976338775, 0.11322889989601284, 0.18322067986967489, 1.2898375890772304e-05, 5.371776627923394e-06, 1.4717196350488848e-09, 0.0, 0.0, 0.0]
rlhfhuman_correct1 = [0.52, 0.7466666666666666, 0.6133333333333334, 0.84, 0.8466666666666667, 0.8733333333333334, 0.86, 0.88, 0.9466666666666667]
rlhfhuman_cor_err1 = [0.023094010767585053, 0.06359594676112972, 0.026666666666666655, 0.034641016151377546, 0.017638342073763955, 0.006666666666666672, 0.023094010767585053, 0.02000000000000002, 0.013333333333333308]

print('rlhf_probs = ' + str(average_two_lists(rlhf_probs, rlhf_probs1)))
print('rlhf_probs_err = ' + str(average_two_lists(rlhf_probs_err, rlhf_probs_err1)))
print('rlhf_correct = ' + str(average_two_lists(rlhf_correct, rlhf_correct1)))
print('rlhf_correct_err = ' + str(average_two_lists(rlhf_cor_err, rlhf_cor_err1)))
print('featureprefs_probs = ' + str(average_two_lists(featureprefs_probs, featureprefs_probs1)))
print('featureprefs_probs_err = ' + str(average_two_lists(featureprefs_probs_err, featureprefs_probs_err1)))
print('featureprefs_correct = ' + str(average_two_lists(featureprefs_correct, featureprefs_correct1)))
print('featureprefs_correct_err = ' + str(average_two_lists(featureprefs_cor_err, featureprefs_cor_err1)))
print('featureprefshuman_probs = ' + str(average_two_lists(featureprefshuman_probs, featureprefshuman_probs1)))
print('featureprefshuman_probs_err = ' + str(average_two_lists(featureprefshuman_probs_err, featureprefshuman_probs_err1)))
print('featureprefshuman_correct = ' + str(average_two_lists(featureprefshuman_correct, featureprefshuman_correct1)))
print('featureprefshuman_cor_err = ' + str(average_two_lists(featureprefshuman_cor_err, featureprefshuman_cor_err1)))
print('rlhfhuman_probs = ' + str(average_two_lists(rlhfhuman_probs, rlhfhuman_probs1)))
print('rlhfhuman_probs_err = ' + str(average_two_lists(rlhfhuman_probs_err, rlhfhuman_probs_err1)))
print('rlhfhuman_correct = ' + str(average_two_lists(rlhfhuman_correct, rlhfhuman_correct1)))
print('rlhfhuman_cor_err = ' + str(average_two_lists(rlhfhuman_cor_err, rlhfhuman_cor_err1)))